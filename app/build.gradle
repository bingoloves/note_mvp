apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters 'armeabi', 'x86'//, 'armeabi-v7a', 'arm64-v8a', 'x86_64', 'mips', 'mips64'
//        }
//        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField("String", "HOST", '"http://192.168.6.41:8080"')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField("String", "HOST", '"http://192.168.6.41:8080"')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':base')
    implementation project(':xml')
    implementation project(':keyboard')
    implementation 'com.mobsandgeeks:android-saripaar:2.0.3'
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    //view
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'annotation'
    }
    //刷新库
    implementation rootProject.ext.dependencies["smart-refresh"]
    implementation rootProject.ext.dependencies["smart-refresh-header"]
    //tabLayout
    implementation rootProject.ext.dependencies["flyco-tab-layout"]
}
